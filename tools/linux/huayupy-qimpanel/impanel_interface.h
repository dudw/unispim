/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p impanel_interface.h: org.kde.impanel.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef IMPANEL_INTERFACE_H
#define IMPANEL_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.kde.impanel
 */
class OrgKdeImpanelInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.impanel"; }

public:
    OrgKdeImpanelInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgKdeImpanelInterface();

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
    void Configure();
    void Exit();
    void HiddenQimPanel();
    void LookupTablePageDown();
    void LookupTablePageUp();
    void MovePreeditCaret(int position);
    void PanelCreated();
    void ReloadConfig();
    void Restart();
    void SelectCandidate(int index);
    void TriggerProperty(const QString &key);
};

/*
 * Proxy class for interface org.kde.impanel2
 */
class OrgKdeImpanel2Interface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.kde.impanel2"; }

public:
    OrgKdeImpanel2Interface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgKdeImpanel2Interface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> SetLookupTable(const QStringList &label, const QStringList &text, const QStringList &attr, bool hasPrev, bool hasNext, int cursor, int layout)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(label) << QVariant::fromValue(text) << QVariant::fromValue(attr) << QVariant::fromValue(hasPrev) << QVariant::fromValue(hasNext) << QVariant::fromValue(cursor) << QVariant::fromValue(layout);
        return asyncCallWithArgumentList(QStringLiteral("SetLookupTable"), argumentList);
    }

    inline QDBusPendingReply<> SetSpotRect(int x, int y, int w, int h)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(x) << QVariant::fromValue(y) << QVariant::fromValue(w) << QVariant::fromValue(h);
        return asyncCallWithArgumentList(QStringLiteral("SetSpotRect"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void PanelCreated2();
};

namespace org {
  namespace kde {
    typedef ::OrgKdeImpanelInterface impanel;
    typedef ::OrgKdeImpanel2Interface impanel2;
  }
}
#endif
